Essa etapa do projeto foi dividida em 3 partes:

Parte 1: Comunicação via TCP
A ideia é que o servidor ecoe tudo que ele receber do cliente.
Nessa parte, foi aberto um socket TCP no servidor na porta 27015, o qual fica sendo escutado pelo servidor por alguma tentativa de conexão de um cliente.
O cliente, se conecta com o servidor e o servidor aceita a conexão.
Tudo que o cliente envia, o servidor ecoa de volta pro cliente.
Ao final da troca de mensagem, a conexão é encerrada.

Parte 2: Comunicação via UDP
A ideia é que o servidor ecoe tudo que ele receber do cliente.
Nessa parte, foi aberto um socket UDP no servidor na porta 27015 e um socket UDP no cliente na porta 27018.
Tudo que o cliente envia, o servidor ecoa de volta pro cliente.
Os métodos referentes a essa troca de mensagem são via UDP, podendo haver perda do datagrama.
Ao final do envio e recebimento da resposta do servidor, o cliente fecha seu socket.

Parte 3: Recebimento de uma página HTTP
A ideia é que o servidor possua um arquivo "home.html" e que ele retorne tal arquivo caso seja requisitado por algum cliente.
Nessa parte, foi aberto um socket TCP no servidor na porta 80, o qual fica sendo escutado pelo servidor por alguma tentativa de conexão de um cliente.
O cliente, se conecta com o servidor e o servidor aceita a conexão.
O cliente envia uma mensagem no formato HTTP.
O servidor, como é bem simples, apenas pode retornar resposta pra um tipo de requisição, isto é, um GET do arquivo home.html.
Caso a requisição seja isso, ele retorna o arquivo.
O cliente imprime o arquivo recebido e fecha seu socket.


Ao inicializar o servidor, ele deve escolher que tipo de comunicação ele irá aceitar.
Ao inicializar o cliente, ele deve escolher que tipo de comunicação ele irá fazer. Caso o servidor esteja aceitando esse tipo de comunicação, ele irá conseguir se comunicar com o servidor.

